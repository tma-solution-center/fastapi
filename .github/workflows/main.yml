name: Build and Push Docker Image

on:
  push:
    branches:
      - main

jobs:
  build-docker-image:
    runs-on: ubuntu-latest
    
    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: tmasolutioncenter@gmail.com
          password: 12345678x@X
          
      # Generate a timestamp and store it in an environment variable
      - name: Generate timestamp
        id: timestamp
        run: echo "TIMESTAMP=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV

      # Build and push the Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: tmasc/fastapi:${{ env.TIMESTAMP }}

      # Optional: Logout from Docker Hub
      - name: Log out from Docker Hub
        run: docker logout
  update-other-repo:
      runs-on: ubuntu-latest
      needs: build-docker-image  # This job depends on the completion of the previous job
  
      steps:
        # Step 1: Set up Git configuration
        - name: Set up Git
          run: |
            git config --global user.name "TMASC"
            git config --global user.email "tmasolutioncenter@gmail.com"
        
        # Step 2: Checkout the target repository to be updated
        - name: Checkout Target Repo
          run: |
            git clone https://$GITHUB_ACTOR:${{ secrets.PAT_TOKEN }}@github.com/tma-solution-center/deploy.git
            cd deploy
            
        # Step 3: Update the tag in the target repo's file
        - name: Update tag in target repo
          run: |
            cd deploy
            sed -i '5s/.*/      tag: '${{ env.TIMESTAMP }}'/' charts/fastapi/values.yaml
            
        # Step 4: Commit and push changes to the target repo
          run: |
            cd deploy
            if git diff --quiet; then
              echo "No changes detected."
            else
              git add .
              git commit -m "Update Docker tag to ${{ env.TIMESTAMP }} from GitHub Actions"
              git push origin main
            fi
