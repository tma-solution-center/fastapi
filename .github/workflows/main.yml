name: Build Docker Image and Update Other Repo

on:
  push:
    branches:
      - main  # Trigger when there's a push to the main branch

jobs:
  build-docker-image:
    runs-on: ubuntu-latest
    
    steps:
      # Step 1: Checkout the source repository
      - name: Checkout Source Repo
        uses: actions/checkout@v3

      # Step 2: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 3: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          
      # Step 4: Generate a timestamp and store it in an environment variable
      - name: Generate timestamp
        id: timestamp
        run: echo "TIMESTAMP=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV

      # Step 5: Build and push the Docker image with the timestamped tag
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: tmasc/fastapi:${{ env.TIMESTAMP }}

      # Step 6: Log out from Docker Hub (optional)
      - name: Log out from Docker Hub
        run: docker logout

  update-other-repo:
    runs-on: ubuntu-latest
    needs: build-docker-image  # This job depends on the completion of the previous job

    steps:
      # Step 1: Set up Git configuration
      - name: Set up Git
        run: |
          git config --global user.name "TMASC"
          git config --global user.email "tmasolutioncenter@gmail.com"
      
      # Step 2: Checkout the target repository to be updated
      - name: Checkout Target Repo
        run: |
          git clone https://$GITHUB_ACTOR:${{ secrets.PAT_TOKEN }}@github.com/tma-solution-center/deploy.git
          cd deploy
          
      # Step 3: Update the tag in the target repo's file
      - name: Update tag in target repo
        run: |
          cd deploy
          sed -i '5s/.*/      tag: '${{ env.TIMESTAMP }}'/' charts/fastapi/values.yaml
          
      # Step 4: Commit and push changes to the target repo
        run: |
          cd deploy
          if git diff --quiet; then
            echo "No changes detected."
          else
            git add .
            git commit -m "Update Docker tag to ${{ env.TIMESTAMP }} from GitHub Actions"
            git push origin main
          fi
